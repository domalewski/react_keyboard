{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","keyInput","handleKeyPress","event","setState","key","document","addEventListener","this","removeEventListener","pressedKey","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAe,CACbC,SAAU,2BAFd,EAaEC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEH,SAAS,4BAAD,OAA8BE,EAAME,IAApC,QAd5B,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,kBAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,kBAV/C,oBAiBE,WACE,IAAkBQ,EAAeF,KAAKR,MAA9BC,SAER,OACE,qBAAKU,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAA6BD,UAtBrC,GAAyBE,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAT,SAASU,eAAe,W","file":"static/js/main.cdaf7811.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  keyInput: string;\n};\n\nexport class App extends React.Component {\n  state: State = {\n    keyInput: 'Nothing was pressed yet',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.handleKeyPress);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.handleKeyPress);\n  }\n\n  handleKeyPress = (event: KeyboardEvent) => {\n    this.setState({ keyInput: `The last pressed key is [${event.key}]` });\n  };\n\n  render() {\n    const { keyInput: pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">{pressedKey}</p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}